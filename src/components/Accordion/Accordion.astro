---
import type { AccordionProps } from './accordion'

import ArrowDown from '../../icons/arrow-down.svg?raw'
import Plus from '../../icons/plus.svg?raw'

import styles from './accordion.module.scss'

interface Props extends AccordionProps {}

const {
    items,
    icon,
    reverse,
    className
} = Astro.props

const classes = [
    styles.accordion,
    reverse && styles.reverse,
    icon === 'plus' && styles.plus,
    className
]
---

<ul class:list={classes} data-id="w-accordion">
    {items.map((item: AccordionProps['items'][0]) => (
        <li>
            <button
                class:list={[styles.title, item.reverse && styles.reverse]}
                data-toggle="true"
            >
                {item.title}
                {icon !== 'none' && (
                    <Fragment set:html={icon === 'plus' ? Plus : ArrowDown} />
                )}
            </button>
            <div class={styles.wrapper}>
                <div class={styles.content} set:html={item.content} />
            </div>
        </li>
    ))}
</ul>

<script>
    import { on } from '../../utils/DOMUtils'

    const addEventListeners = () => {
        on('[data-id="w-accordion"]', 'click', (event: Event) => {
            const target = event.target as HTMLDivElement

            if (target.dataset.toggle) {
                target.dataset.open = target.dataset.open === 'true'
                    ? 'false'
                    : 'true'
            }
        }, true)
    }

    on(document, 'astro:after-swap', addEventListeners)
    addEventListeners()
</script>
