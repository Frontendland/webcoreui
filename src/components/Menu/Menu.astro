---
import type { MenuProps } from './menu'

import ConditionalWrapper from '../ConditionalWrapper/ConditionalWrapper.astro'

import styles from './menu.module.scss'

interface Props extends MenuProps {}

const {
    items,
    logo,
    centerLogo,
    className,
    wrapperClassName
} = Astro.props

const classes = [
    styles.menu,
    className
]

const containerClasses = [
    styles.container,
    wrapperClassName
]

const wrapMenu = (logo?.url || logo?.html) && items?.length && Astro.slots.has('default')
---

<header class:list={classes}>
    <div class:list={containerClasses}>
        <ConditionalWrapper condition={!!wrapMenu}>
            <div slot="wrapper" class={styles.wrapper}>
                children
            </div>
            {logo?.url && !centerLogo && (
                <a href="/">
                    <img
                        src={logo.url}
                        alt={logo.alt || 'Logo'}
                        width={logo.width}
                        height={logo.height}
                    />
                </a>
            )}

            {!centerLogo && logo?.html && (
                <a href="/" aria-label={logo.alt || 'Logo'}>
                    <Fragment set:html={logo.html} />
                </a>
            )}

            {items?.length && (
                <ul>
                    {items.map(item => (
                        <li>
                            <a
                                href={item.href}
                                target={item.target}
                                class:list={[item.active && styles.active]}
                            >
                                {item.name}
                            </a>
                        </li>
                    ))}
                </ul>
            )}
        </ConditionalWrapper>

        {items?.length && (
            <button class={styles.hamburger} data-id="hamburger">
                <span class={styles.meat}></span>
                <span class={styles.meat}></span>
                <span class={styles.meat}></span>
                <span class={styles.meat}></span>
            </button>
        )}

        {centerLogo && logo?.html && (
            <a href="/" aria-label={logo.alt || 'Logo'}>
                <Fragment set:html={logo.html} />
            </a>
        )}

        {logo?.url && centerLogo && (
            <a href="/">
                <img
                    src={logo.url}
                    alt={logo.alt || 'Logo'}
                    width={logo.width}
                    height={logo.height}
                />
            </a>
        )}

        <slot />
    </div>
</header>

<script>
    document
        .querySelector('[data-id="hamburger"]')
        ?.addEventListener('click', event => {
            const hamburger = event.currentTarget as HTMLDivElement
            const header = hamburger.parentElement?.parentElement as HTMLHeadElement

            header.dataset.active = header.dataset.active === 'true'
                ? 'false'
                : 'true'
        })
</script>
