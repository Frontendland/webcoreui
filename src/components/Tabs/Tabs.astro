---
import type { TabsProps } from './tabs'

import styles from './tabs.module.scss'

interface Props extends TabsProps {}

const {
    items,
    theme,
    vertical,
    even,
    className
} = Astro.props

const classes = [
    styles.tabs,
    theme && styles[theme],
    vertical && styles.vertical,
    even && styles.even,
    className
]
---

<section class:list={classes} data-id="w-tabs">
    <div class={styles.wrapper}>
        <div class={styles.items}>
            {items.map(item => (
                <button
                    data-value={item.value}
                    data-active={item.active ? 'true' : null}
                    disabled={item.disabled}
                >
                    <Fragment set:html={item.label} />
                </button>
            ))}
        </div>
    </div>
    <div class={styles.content}>
        <slot />
    </div>
</section>

<script>
    import { on } from '../../utils/DOMUtils'

    const addEventListeners = () => {
        on('[data-id="w-tabs"]', 'click', (event: Event) => {
            const target = event.target as HTMLDivElement

            if (target.dataset.value) {
                const tabContent = target.parentElement
                    ?.parentElement
                    ?.nextElementSibling as HTMLDivElement

                Array.from(tabContent.children)
                    .forEach((element: any) => {
                        if (element.dataset.tab === target.dataset.value) {
                            element.dataset.active = true
                        } else {
                            element.dataset.active = false
                        }
                    })

                const tabs = target.parentElement?.querySelectorAll('button') as NodeListOf<HTMLButtonElement>

                Array.from(tabs).forEach((tab: any) => {
                    tab.dataset.active = 'false'

                    if (tab.dataset.value === target.dataset.value) {
                        tab.dataset.active = 'true'
                    }
                })
            }
        }, true)
    }

    on(document, 'astro:after-swap', addEventListeners)
    addEventListeners()
</script>
