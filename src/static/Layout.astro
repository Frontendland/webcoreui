---
import Footer from '@components/Footer/Footer.astro'
import type { IconProps } from '@components/Icon/icon'
import Icon from '@components/Icon/Icon.astro'
import Menu from '@components/Menu/Menu.astro'

import logo from '../../public/img/logo.svg?raw'

const { nonStickyMenu } = Astro.props

const menuClasses = [
    'menu',
    nonStickyMenu && 'fixed'
].filter(Boolean).join(' ')

const theme = (Astro.cookies.get('w-theme')?.value || 'dark') as string
const isPath = (path: string) => Astro.url.pathname.includes(path)

const menu = {
    logo: {
        html: logo
    },
    items: [
        { url: '/svelte', name: 'Svelte', active: isPath('svelte') },
        { url: '/react', name: 'React', active: isPath('react') },
        { url: '/themes', name: 'Themes', active: isPath('themes') },
        { url: '/resets', name: 'Resets', active: isPath('resets') },
        { url: '/utilities', name: 'Utilities', active: isPath('utilities') }
    ]
}

const footer = [
    {
        title: 'Playground',
        items: [
            { name: 'Svelte', href: '/svelte', active: isPath('svelte') },
            { name: 'React', href: '/react', active: isPath('react') }
        ]
    },
    {
        title: 'CSS',
        items: [
            { name: 'Themes', href: '/themes', active: isPath('themes') },
            { name: 'Resets', href: '/resets', active: isPath('resets') },
            { name: 'Utilities', href: '/utilities', active: isPath('utilities') }
        ]
    }
]

const externalLinks = [
    {
        url: 'https://github.com/Frontendland/webcoreui',
        name: 'github',
        icon: 'github'
    },
    {
        url: 'https://www.npmjs.com/package/webcoreui',
        name: 'npm',
        icon: 'components'
    },
    {
        url: 'https://webcoreui.dev',
        name: 'docs',
        icon: 'file'
    }
]
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/img/favicon.svg" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <title>Webcore</title>
    </head>
    <body class={theme}>
        <Menu
            logo={menu.logo}
            items={menu.items}
            className={menuClasses}
        >
            <div class="items">
                {externalLinks.map(link => (
                    <a href={link.url} target="_blank" rel="noreferrer">
                        {link.name}
                    </a>
                ))}
            </div>
        </Menu>
        <div class="container my">
            <slot />
        </div>
        <Footer
            logo={{ html: logo }}
            columns={footer}
            subText="Learn more at <a href='https://webcoreui.dev' target='_blank'>webcoreui.dev</a>"
        >
            <div class="flex sm">
                {externalLinks.map(link => (
                    <a href={link.url} target="_blank" rel="noreferrer">
                        <Icon type={link.icon as IconProps['type']} size={18} />
                    </a>
                ))}
            </div>
        </Footer>
    </body>
</html>

<style is:global lang="scss">
    @import '../scss/index.scss';
    @import '../scss/config.scss';

    @include setup((
        fontRegular: '/fonts/Inter-Regular.woff2',
        fontBold: '/fonts/Inter-Bold.woff2',
        themes: (
            dark: '.dark',
            light: '.light',
            midnight: '.midnight',
            vintage: '.vintage',
            amber: '.amber',
            synthwave: '.synthwave',
        )
    ));

    body {
        @include spacing('mb-5xl');
    }

    h1:not(.reset) {
        margin: 100px 0 10px;
        font-size: 48px;
        text-align: center;
    }

    h2:not(.reset) {
        color: var(--w-color-primary-10);
        font-family: Regular;
        font-weight: 400;
        text-align: center;
        line-height: 1.5;
        font-size: 24px;
        margin: 0 0 20px;

        a {
            text-decoration: underline;
        }
    }

    .menu {
        &.fixed {
            position: relative;
        }

        .items {
            @include layout(flex, sm);

            a {
                @include typography(primary-20);

                &:hover {
                    @include typography(primary);
                }
            }
        }
    }

    .my {
        @include spacing(auto-default);
    }

    .mb {
        @include spacing(mb-default);
    }

    .muted {
        @include typography(primary-20, md);
    }
</style>
